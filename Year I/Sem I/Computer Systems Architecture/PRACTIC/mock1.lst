     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, printf        ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 72312E74787400              file_name db "r1.txt", 0
    18 00000007 7200                        access_mode db "r", 0
    19 00000009 FFFFFFFF                    file_descriptor dd -1
    20                                      
    21                                      len equ 100
    22 0000000D 00<rept>                    mesaj times len db 0
    23 00000071 00<rept>                    decodat times len db 0
    24 000000D5 257300                      format db "%s", 0
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29 00000000 68[07000000]                    push dword access_mode
    30 00000005 68[00000000]                    push dword file_name
    31 0000000A FF15[00000000]                  call [fopen]
    32                                          
    33 00000010 83C408                          add esp, 4*2
    34                                          
    35 00000013 A3[09000000]                    mov [file_descriptor], eax
    36                                          
    37 00000018 83F800                          cmp eax, 0
    38 0000001B 7470                            je final
    39                                          
    40 0000001D FF35[09000000]                  push dword [file_descriptor]
    41 00000023 6A64                            push dword len
    42 00000025 6A01                            push dword 1
    43 00000027 68[0D000000]                    push dword mesaj
    44 0000002C FF15[00000000]                  call [fread]
    45                                          
    46 00000032 BE[0D000000]                    mov esi, mesaj
    47 00000037 BF[71000000]                    mov edi, decodat
    48                                          
    49                                          repeta:
    50 0000003C 8A06                                mov al, [esi]
    51 0000003E 3C00                                cmp al, 0
    52 00000040 7429                                je afisare
    53                                              
    54 00000042 A4                                  movsb
    55 00000043 3C79                                cmp al, "y"
    56 00000045 7416                                je do_y
    57                                              
    58 00000047 3C7A                                cmp al, "z"
    59 00000049 7418                                je do_z
    60                                              
    61 0000004B 3C20                                cmp al, " "
    62 0000004D 741A                                je skip 
    63                                              
    64 0000004F 3C2E                                cmp al, "."
    65 00000051 7416                                je skip
    66                                              
    67 00000053 3C2C                                cmp al, ","
    68 00000055 7412                                je skip
    69                                              
    70 00000057 806FFF02                            sub byte[edi-1], 2
    71 0000005B EB0C                                jmp skip
    72                                              
    73                                              do_y:
    74 0000005D C647FF61                            mov byte[edi-1], "a"
    75 00000061 EB06                                jmp skip
    76                                              
    77                                              do_z:
    78 00000063 C647FF62                            mov byte[edi-1], "b"
    79 00000067 EB00                                jmp skip
    80                                              
    81                                              skip:
    82                                              
    83 00000069 EBD1                                jmp repeta
    84                                              
    85                                          afisare:
    86                                          
    87 0000006B 68[71000000]                    push dword decodat
    88 00000070 68[D5000000]                    push dword format
    89 00000075 FF15[00000000]                  call [printf]
    90 0000007B 83C408                          add esp, 4*2
    91                                          
    92 0000007E FF35[09000000]                  push dword [file_descriptor]
    93 00000084 FF15[00000000]                  call [fclose]
    94 0000008A 83C404                          add esp, 4
    95                                          
    96                                          
    97                                          
    98                                          final:
    99                                      
   100                                          ; exit(0)
   101 0000008D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   102 0000008F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
