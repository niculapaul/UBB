     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  
    10                                  ; our variables are declared here (the segment is called data) 
    11                                  segment data use32 class=data
    12 00000000 14                          a db 14h
    13 00000001 1E                          b db 1Eh
    14 00000002 2D                          c db 2Dh
    15 00000003 28                          d db 28h
    16                                      
    17                                  ; the program code will be part of a segment called code
    18                                  segment code use32 class=code
    19                                  start:
    20                                  
    21                                  ;d-(a+b)+c
    22                                  
    23 00000000 A0[00000000]                mov AL, [a]; AL= a = 20
    24 00000005 0205[01000000]              add AL, [b]; AL = AL + b = 20 + 30 = 50
    25 0000000B 8A1D[03000000]              mov BL, [d]; BL = 40
    26 00000011 28C3                        sub BL, AL; 
    27 00000013 021D[02000000]              add BL, [c];
    28                                  
    29                                      ; call exit(0) ), 0 represents status code: SUCCESS
    30 00000019 6A00                        push dword 0 ; saves on stack the parameter of the function exit
    31 0000001B FF15[00000000]              call [exit] ; function exit is called in order to end the execution of the program
