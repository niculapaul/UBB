     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  
    10                                  ; our variables are declared here (the segment is called data) 
    11                                  segment data use32 class=data
    12 00000000 02                          a db 2
    13 00000001 40                          b db 64
    14 00000002 2D                          c db 45
    15 00000003 C800                        d dw 200
    16                                      
    17                                  ; the program code will be part of a segment called code
    18                                  segment code use32 class=code
    19                                  start:
    20                                  
    21                                  ;200-[3*(c+b-d/a)-300]
    22                                  
    23 00000000 66A1[03000000]              mov AX, [d]; AX = d = 200
    24 00000006 8A1D[00000000]              mov BL, [a]; BL = a = 2
    25 0000000C F6F3                        div BL; AL = AX/BL = 200/2 = 100, AH = AX%BL = 0
    26 0000000E 8A1D[02000000]              mov BL, [c]; BX = c = 45
    27 00000014 8A0D[01000000]              mov CL, [b]; CX = b = 64
    28 0000001A 00CB                        add BL, CL; BL = BL + CL = 45 + 64 = 109
    29 0000001C 28C3                        sub BL, AL; BL = BL - AL = 109 - 100 = 9
    30 0000001E 88D8                        mov AL, BL; AL = 9
    31 00000020 B303                        mov BL, 3;
    32 00000022 F6E3                        mul BL; AX = AL * BL = 9 * 3 = 27
    33 00000024 662D2C01                    sub AX, 300; AX = 27 - 300 = -273
    34 00000028 66BBC800                    mov BX, 200; BX = 200
    35 0000002C 6629C3                      sub BX, AX; BX = BX - AX = 200 - (-273) = 473 
    36                                  
    37                                      ; call exit(0) ), 0 represents status code: SUCCESS
    38 0000002F 6A00                        push dword 0 ; saves on stack the parameter of the function exit
    39 00000031 FF15[00000000]              call [exit] ; function exit is called in order to end the execution of the program
